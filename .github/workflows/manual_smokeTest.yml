# This is a basic workflow that is manually triggered

name: Manual workflow

# Controls when the action will run. Workflow runs when manually triggered using the UI
# or API.
on: workflow_dispatch

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  e2e-tests:
    runs-on: ubuntu-latest
    env: 
      SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v2
        with:
          node-version: '18.12.1'
      # create .env file with secrets 
      - name: 'Create env file'
        run: |
          touch .env
          echo TODOIST_URL=${{ secrets.TODOIST_URL }} >> .env
          echo TODOIST_USERNAME=${{ secrets.TODOIST_USERNAME }} >> .env
          echo TODOIST_PASSWORD= ${{ secrets.TODOIST_PASSWORD }} >> .env
          echo TODOIST_ID_BASE_PROJECT= ${{ secrets.TODOIST_ID_BASE_PROJECT }} >> .env
          echo TODOIST_TITLE_BASE_PROJECT= ${{ secrets.TODOIST_TITLE_BASE_PROJECT }} >> .env
          cat .env
      # create the playwright-report folder to uploda the test result
      - name: Create dir
        run: |
          mkdir playwright-report
      - name: Install dependencies
        run: npm ci
      - name: Install Playwright
        run: npx playwright install --with-deps
      # run smoke tests on All Browsers
      - name: Run Smoke tests on Chrome/Firefox/Safari
        run: npm run tests:smokeTests
      - name: Upload test results
        uses: actions/upload-artifact@v2
        with:
          name: playwright-report
          path: playwright-report
        if: always()
      ###### Commit Smoke Test status ######
      - name: Tests Passed
        if: ${{ success() }}
        # set the merge commit status check
        # using GitHub REST API
        run: |
          curl --request POST \
          --url https://api.github.com/repos/${{ github.repository }}/statuses/${{ github.sha }} \
          --header 'authorization: Bearer ${{ secrets.GITHUB_TOKEN }}' \
          --header 'content-type: application/json' \
          --data '{
            "context": "Smoke Tests",
            "state": "success",
            "description": "Smoke tests passed",
            "target_url": "https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"
          }'
      - name: Test Failed
        if: ${{ failure() }}
        # set the merge commit status check
        # using GitHub REST API
        run: |
          curl --request POST \
          --url https://api.github.com/repos/${{ github.repository }}/statuses/${{ github.sha }} \
          --header 'authorization: Bearer ${{ secrets.GITHUB_TOKEN }}' \
          --header 'content-type: application/json' \
          --data '{
            "context": "Smoke Tests",
            "state": "failure",
            "description": "Smoke tests failed",
            "target_url": "https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"
          }'
      # Slack Integration - Send message to #qa-challenge channel
      - name: Slack Notification
        uses: act10ns/slack@v1
        with: 
          status: ${{ job.status }}
          steps: ${{ toJson(steps)}}
          channel: '#qa-challenge'
        if: always()
